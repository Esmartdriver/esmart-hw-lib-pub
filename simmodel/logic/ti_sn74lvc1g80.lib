
* PRE and CLR must be tied HIGH for circuit to work.

.SUBCKT SN74LVC1G80 Q_N Data CLK VCC AGND
XUDFF Data VCC VCC VCC CLK AGND Q_N VCC AGND Ideal_Flip_Flop
.ENDS


.SUBCKT Ideal_Flip_Flop Data PRE CLR OE CLK Q Q_N VCC AGND
*Data driver
XU9         11 Data CLK VCC AGND BUFFER_0
*Second stage driver
XU1         13 12 CLKn VCC AGND BUFFER_0
*CLR driver
XU6         14 CLR AGND VCC AGND BUFFER_0
*Pre Driver
XU5         15 PRE AGND VCC AGND BUFFER_0
*OE pin option
ROE OE AGND 1MEG
*Output driver Q
*XU8         Q 16 VCC AGND SN74LVC1G80Driver
RQOUT Q VCC 10MEG
*Output driver Q\
XU11        Q_N 17 VCC AGND SN74LVC1G80Driver

XU2         CLKn VCC CLK VCC AGND GATE_2INPUT_HC_2I_NAND_PP_ST_0
XU12        17 14 16 VCC AGND GATE_2INPUT_HC_2I_NAND_PP_ST_0
XU7         18 15 12 VCC AGND GATE_2INPUT_HC_2I_NAND_PP_ST_0
XU4         16 15 13 VCC AGND GATE_2INPUT_HC_2I_NAND_PP_ST_0
XU3         12 11 14 VCC AGND GATE_2INPUT_HC_2I_NAND_PP_ST_0
R2          11 18 1K 
R1          13 17 1K 
C2          17 AGND 1P 
C1          18 AGND 1P 
.ENDS

********************************************************************************
*                                 SN74LVC1G80 Driver
********************************************************************************
.SUBCKT SN74LVC1G80Driver Y A VCC AGND
XU1 Y A VCC VCC AGND LOGIC_GATE_2PIN_OD_LVC_1i_AND_PP_CMOS
.ENDS


*$
.SUBCKT LOGIC_GATE_2PIN_OD_LVC_1i_AND_PP_CMOS OUT A B VCC GND

.PARAM VCC_ABS_MAX = 6.5
.PARAM VCC_MAX = 5.5
.PARAM RA = 2200000
.PARAM RB = 2200000
.PARAM CA = 4.5e-12
.PARAM CB = 4.5e-12
.PARAM ROEZ = 5500000
.PARAM COEZ = 6e-12
RA  A  GND {RA}
RB  B  GND {RB}
CA  A  GND {CA}
CB  B  GND {CB}
XUA NA A VCC GND LOGIC_INPUT_LVC_1i_AND_PP_CMOS
XUB NB B VCC GND LOGIC_INPUT_LVC_1i_AND_PP_CMOS
XUG NA NB NOUTG VCC GND LOGIC_FUNCTION_2_LVC_1i_AND_PP_CMOS
XOUTPD NOUTG NOUTTPD VCC GND TPD_LVC_1i_AND_PP_CMOS
XUOUT NOUTTPD NOUT_INT VCC GND LOGIC_PP_OUTPUT_LVC_1i_AND_PP_CMOS
XICC VCC GND NVIOUT LOGIC_ICC_LVC_1i_AND_PP_CMOS
SICC VCC GND VCC GND SW1
* Monitor Output Current *
H1 NVIOUT GND VIOUT 1 
VIOUT NOUT_INT OUTsw 0 
SIOFF OUTsw OUT VCC GND SW2
*DA1 NA1 VCC D1
DA2 GND A D1
*DB1 NB1 VCC D1
DB2 GND B D1
*DC1 NC1 VCC D1
*DO1 NO1 VCC D1
DO2 GND OUT D1
*SDA1 NA1 A VCC GND SW2
*SDB1 NB1 B VCC GND SW2
*SDO1 NO1 OUT VCC GND SW2
.MODEL SW1 VSWITCH VON = {VCC_ABS_MAX} VOFF = {VCC_MAX} RON = 10 ROFF = 60e6
.MODEL SW2 VSWITCH VON = {0.55} VOFF = {0.45} RON = 10m ROFF = 100e6
.MODEL D1 D
.ENDS
*$
.SUBCKT LOGIC_INPUT_LVC_1i_AND_PP_CMOS OUT IN VCC VEE
.PARAM STANDARD_INPUT_SELECT = 1

.PARAM SCHMITT_TRIGGER_INPUT_SELECT = 0
ESTD_THR VSTD_THR VEE TABLE {V(VCC,VEE)} =
+(1,0.5)
+(1.8,0.9)
+(2.5,1.25)
+(3.3,1.65)
+(5,2.5)
+(6,3)
ETRP_P VTRP_P VEE TABLE {V(VCC,VEE)} =
+(1.65,0.9)
+(2.3,1.25)
+(3,1.7)
+(4.5,2.45)
+(5.5,3)
ETRP_N VTRP_N VEE TABLE {V(VCC,VEE)} =
+(1.65,0.45)
+(2.3,0.7)
+(3,1.05)
+(4.5,1.72)
+(5.5,2.1)
EHYST VHYST VEE TABLE {V(VCC,VEE)} =
+(1.65,0.45)
+(2.3,0.55)
+(3,0.65)
+(4.5,0.73)
+(5.5,0.9)
ETRUE NTRUE VEE VALUE = {V(VCC,VEE)}
EFALSE NFALSE VEE VALUE = {0}
EBETA BETA VEE VALUE = {V(VHYST,VEE)/(V(NTRUE,VEE) - V(NFALSE,VEE) + V(VHYST,VEE))}
EFB NFB VEE VALUE = {(1 - V(BETA,VEE))*V(IN,VEE) + V(BETA,VEE)*V(CURR_OUT,VEE)}
*EFB NFB VEE VALUE = {(1 - V(BETA,VEE))*V(IN,VEE) + V(BETA,VEE)*V(OUT,VEE)}
EREF NREF VEE VALUE = {0.5*(1 - V(BETA,VEE))*(V(VTRP_P,VEE) + V(VTRP_N,VEE)) 
+ + 0.5*V(BETA,VEE)*(V(NTRUE,VEE) + V(NFALSE,VEE))}
EDIFF NDIFF VEE VALUE = {V(NFB,NREF)}
*ECOMP OUT VEE VALUE = {0.5*V(VCC,VEE)*(SGN(V(NDIFF,VEE)) + ABS(SGN(V(NDIFF,VEE))))}
GCOMP VEE CURR_OUT VALUE = {SCHMITT_TRIGGER_INPUT_SELECT*0.5*V(VCC,VEE)*(SGN(V(NDIFF,VEE)) + ABS(SGN(V(NDIFF,VEE))))}
GSTD VEE CURR_OUT VALUE = {STANDARD_INPUT_SELECT*0.5*V(VCC,VEE)*(SGN(V(IN,VSTD_THR)) + ABS(SGN(V(IN,VSTD_THR))))}
ROUT CURR_OUT VEE 1
EMID MID VEE VALUE = {0.5*(V(VCC,VEE) + V(VEE))}
EARG NARG VEE VALUE = {V(CURR_OUT,VEE) - V(MID,VEE)}
EOUT OUT VEE VALUE = {0.5*(SGN(V(NARG,VEE)) + ABS(SGN(V(NARG,VEE) ) ) )}
*EOUT OUT VEE CURR_OUT VEE 1
.ENDS
*$
.SUBCKT LOGIC_FUNCTION_2_LVC_1i_AND_PP_CMOS A B OUT VCC VEE
.PARAM AND  = 1
.PARAM NAND = 0
.PARAM OR   = 0
.PARAM NOR  = 0
.PARAM XOR  = 0
.PARAM XNOR = 0
GAND  VEE N1 VALUE = {AND*V(A,VEE)*V(B,VEE)}
GNAND VEE N1 VALUE = {NAND*(1 - V(A,VEE)*V(B,VEE))}
GOR   VEE N1 VALUE = {OR*(MIN(V(A,VEE) + V(B,VEE),1))}
GNOR  VEE N1 VALUE = {NOR*(1 - MIN(V(A,VEE) + V(B,VEE),1))}
GXOR  VEE N1 VALUE = {XOR*((1 - V(A,VEE))*V(B,VEE) + V(A,VEE)*(1 - V(B,VEE)))}
GXNOR VEE N1 VALUE = {XNOR*(1 - ((1 - V(A,VEE))*V(B,VEE) + V(A,VEE)*(1 - V(B,VEE))))}
RN1 N1 VEE 1
EOUT OUT VEE N1 VEE 1
.ENDS
*$
*$
.SUBCKT  TPD_LVC_1i_AND_PP_CMOS IN OUT VCC VEE
.PARAM TPDELAY1 = 1N
.PARAM RS = 10K
.PARAM CS = {-TPDELAY1/(RS*LOG(0.5))}
*ETPDNORM NTPDNORM VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{TPDELAY1/TPDELAY4})
*+({VCC2},{TPDELAY2/TPDELAY4})
*+({VCC3},{TPDELAY3/TPDELAY4})
*+({VCC4},{TPDELAY4/TPDELAY4})
ETPDNORM NTPDNORM VEE TABLE {V(VCC,VEE)} =
+(1.8,6.05)
+(2.5,3.75)
+(3.3,2.75)
+(5,2.45)
*R1 IN N1 {RS}
G1 IN N1 VALUE = {V(IN,N1)/(V(NTPDNORM,VEE)*RS)}
RZ IN N1 10G
C1 N1 VEE {CS}
E1 N2 VEE VALUE = {0.5*(1 + SGN(V(N1,VEE) - 0.5))}
EOUT OUT VEE N2 VEE 1
.ENDS
*$
.SUBCKT LOGIC_PP_OUTPUT_LVC_1i_AND_PP_CMOS IN OUT VCC VEE
* ROH1 = {(VCC1 - VOH1)/IOH1}
* ROH2 = {(VCC2 - VOH2)/IOH2}
* ROH3 = {(VCC3 - VOH3)/IOH3}
* ROH4 = {(VCC4 - VOH4)/IOH4}
* ROH5 = {(VCC5 - VOH5)/IOH5}
* ROL1 = {(VOL1)/IOL1}
* ROL2 = {(VOL2)/IOL2}
* ROL3 = {(VOL3)/IOL3}
* ROL4 = {(VOL4)/IOL4}
* ROL5 = {(VOL5)/IOL5}
*EROH NROH VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{ROH1})
*+({VCC2},{ROH2})
*+({VCC3},{ROH3})
*+({VCC4},{ROH4})
*+({VCC5},{ROH5})
*EROL NROL VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{ROL1})
*+({VCC2},{ROL2})
*+({VCC3},{ROL3})
*+({VCC4},{ROL4})
*+({VCC5},{ROL5})
EROH NROH VEE TABLE {V(VCC,VEE)} =
+(1.65,112.5)
+(2.3,50)
+(3,37.5)
+(4.5,21.875)
EROL NROL VEE TABLE {V(VCC,VEE)} =
+(1.65,112.5)
+(2.3,37.5)
+(3,25)
+(4.5,17.1875)
E1 N1 VEE VALUE = {V(VCC,VEE)*V(IN,VEE)}
GOUT N1 OUT VALUE = {V(N1,OUT)*(V(IN,VEE)/V(NROH,VEE) + (1 - V(IN,VEE))/V(NROL,VEE))}
.ENDS
*$
.SUBCKT LOGIC_OD_OUTPUT_LVC_1i_AND_PP_CMOS IN OUT VCC VEE
.PARAM VCC1 = 1.65
.PARAM VCC2 = 2.3
.PARAM VCC3 = 3
.PARAM VCC4 = 4.5
.PARAM VOL1 = 0.45
.PARAM VOL2 = 0.3
.PARAM VOL3 = 0.4
.PARAM VOL4 = 0.55
.PARAM IOL1 = 0.004
.PARAM IOL2 = 0.008
.PARAM IOL3 = 0.016
.PARAM IOL4 = 0.032
.PARAM ROL1 = {(VOL1)/IOL1}
.PARAM ROL2 = {(VOL2)/IOL2}
.PARAM ROL3 = {(VOL3)/IOL3}
.PARAM ROL4 = {(VOL4)/IOL4}
.PARAM ROL5 = {(VOL5)/IOL5}
*EROL NROLx VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{ROL1})
*+({VCC2},{ROL2})
*+({VCC4},{ROL4})
*+({VCC5},{ROL5})
EROL NROLx VEE TABLE {V(VCC,VEE)} =
+(1.65,112.5)
+(2.3,37.5)
+(3,25)
+(4.5,17.1875)
GOUT OUT VEE VALUE = {V(OUT,VEE)*((1 - V(IN,VEE))/V(NROLx,VEE) + (1e-7)*(V(IN,VEE)))}
.ENDS
*$
.SUBCKT LOGIC_TRI_STATE_OUTPUT_LVC_1i_AND_PP_CMOS IN OUT OEZ VCC VEE
.PARAM VCC1 = 1.65
.PARAM VCC2 = 2.3
.PARAM VCC3 = 3
.PARAM VCC4 = 3
.PARAM VCC5 = 4.5
.PARAM VOH1 = 1.2
.PARAM VOH2 = 1.9
.PARAM VOH3 = 2.4
.PARAM VOH4 = 2.3
.PARAM VOH5 = 3.8
.PARAM VOL1 = 0.45
.PARAM VOL2 = 0.3
.PARAM VOL3 = 0.4
.PARAM VOL4 = 0.55
.PARAM VOL5 = 0.55
.PARAM IOH1 = 0.004
.PARAM IOH2 = 0.008
.PARAM IOH3 = 0.016
.PARAM IOH4 = 0.024
.PARAM IOH5 = 0.032
.PARAM IOL1 = 0.004
.PARAM IOL2 = 0.008
.PARAM IOL3 = 0.016
.PARAM IOL4 = 0.024
.PARAM IOL5 = 0.032
.PARAM ROH1 = {(VCC1 - VOH1)/IOH1}
.PARAM ROH2 = {(VCC2 - VOH2)/IOH2}
.PARAM ROH3 = {(VCC3 - VOH3)/IOH3}
.PARAM ROH4 = {(VCC4 - VOH4)/IOH4}
.PARAM ROH5 = {(VCC5 - VOH5)/IOH5}
.PARAM ROL1 = {(VOL1)/IOL1}
.PARAM ROL2 = {(VOL2)/IOL2}
.PARAM ROL3 = {(VOL3)/IOL3}
.PARAM ROL4 = {(VOL4)/IOL4}
.PARAM ROL5 = {(VOL5)/IOL5}
*EROH NROH VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{ROH1})
*+({VCC2},{ROH2})
*+({VCC3},{ROH3})
*+({VCC4},{ROH4})
*+({VCC5},{ROH5})
*EROL NROL VEE TABLE {V(VCC,VEE)} =
*+({VCC1},{ROL1})
*+({VCC2},{ROL2})
*+({VCC3},{ROL3})
*+({VCC4},{ROL4})
*+({VCC5},{ROL5})
EROH NROH VEE TABLE {V(VCC,VEE)} =
+(1.65,112.5)
+(2.3,50)
+(3,37.5)
+(3,29.1666666666667)
+(4.5,21.875)
EROL NROL VEE TABLE {V(VCC,VEE)} =
+(1.65,112.5)
+(2.3,37.5)
+(3,25)
+(3,22.9166666666667)
+(4.5,17.1875)
EOEZ N2 VEE VALUE = {1 - V(OEZ,VEE)}
E1 N1 VEE VALUE = {V(VCC,VEE)*V(IN,VEE)*V(N2,VEE)}
GOUT N1 OUT VALUE = {V(N1,OUT)*V(N2,VEE)*(V(IN,VEE)/V(NROH,VEE) + (1 - V(IN,VEE))/V(NROL,VEE))}
ROUT OUT VEE 1E8
.ENDS
*$
.SUBCKT LOGIC_ICC_LVC_1i_AND_PP_CMOS VCC VEE VIOUT
.PARAM ICC = 2.5e-06
.PARAM VCC_MAX = 5.5
.PARAM VCC_MIN = 1.65
*GICC VCC VEE VALUE = {ICC*V(VCC,VEE)/VCC_MAX}
GICC VCC VEE VALUE = {ICC*0.5*(1 + SGN(V(VCC,VEE) - VCC_MIN))}
*
* Floating ground at mid-rail
EGNDF GNDF 0 VALUE = {0.5*(V(VCC) + V(VEE))}
*
GOUTP VCC GNDF VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))}
GOUTN GNDF VEE VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))}
*
*GOUTP VCC GNDF VALUE = {IF(V(VIMON,GNDF) > 0, V(VIMON,GNDF),0)}
*GOUTN GNDF VEE VALUE = {IF(V(VIMON,GNDF) <= 0, V(VIMON,GNDF),0)}
.ENDS
*$

********************************************************************************
*                                 TRI-STATE BUFFER
********************************************************************************
 
.SUBCKT BUFFER_0  Y A OEZ VCC AGND
XU1 Y A VCC OEZ VCC AGND LOGIC_GATE_2PIN_TRI_STATE_HC_1I_AND_TRISTATE_CMOS
.ENDS 
 
 
 
 
.SUBCKT LOGIC_GATE_2PIN_TRI_STATE_HC_1I_AND_TRISTATE_CMOS OUT A B OEZ VCC GND
.PARAM VCC_ABS_MAX = 7 
.PARAM VCC_MAX = 5.5 
.PARAM RA = 220000000 
.PARAM CA = 1E-11 
.PARAM ROEZ = 5000 
.PARAM COEZ = 3E-12 
RA  A  GND {RA}  
CA  A  GND {CA} 
ROEZ = OEZ GND {ROEZ} 
COEZ = OEZ GND {COEZ} 
XUA NA A VCC GND LOGIC_INPUT_HC_1I_AND_TRISTATE_CMOS 
XUB NB B VCC GND LOGIC_INPUT_HC_1I_AND_TRISTATE_CMOS 
XUOEZ NOEZ OEZ VCC GND LOGIC_INPUT_HC_1I_AND_TRISTATE_CMOS 
XUG NA NB NOUTG VCC GND LOGIC_FUNCTION_2_HC_1I_AND_TRISTATE_CMOS 
XUOUT NOUTG NOUT_INT NOEZ VCC GND LOGIC_TRI_STATE_OUTPUT_HC_1I_AND_TRISTATE_CMOS 
XICC VCC GND NVIOUT LOGIC_ICC_HC_1I_AND_TRISTATE_CMOS 
SICC VCC GND VCC GND SW1 
H1 NVIOUT GND VIOUT 1  
VIOUT NOUT_INT OUTSW 0  
SIOFF OUTSW OUT VCC GND SW2 
DA2 GND A D1 
DB2 GND B D1 
DO2 GND OUT D1 
DOE1 NOEZ VCC D1 
DOE2 GND OEZ D1 
.MODEL SW1 VSWITCH VON = {VCC_ABS_MAX} VOFF = {VCC_MAX} RON = 10 ROFF = 60E6 
.MODEL SW2 VSWITCH VON = {0.55} VOFF = {0.45} RON = 10M ROFF = 100E6 
.MODEL D1 D 
.ENDS


.SUBCKT LOGIC_INPUT_HC_1I_AND_TRISTATE_CMOS OUT IN VCC VEE
.PARAM STANDARD_INPUT_SELECT = 1  
.PARAM SCHMITT_TRIGGER_INPUT_SELECT = 0 
ESTD_THR VSTD_THR VEE TABLE {V(VCC,VEE)} = 
+(1,0.5) 
+(6,3) 
GSTD VEE CURR_OUT VALUE = {STANDARD_INPUT_SELECT*0.5*V(VCC,VEE)*(SGN(V(IN,VSTD_THR)) + ABS(SGN(V(IN,VSTD_THR))))}
ROUT CURR_OUT VEE 1
EMID MID VEE VALUE = {0.5*(V(VCC,VEE) + V(VEE))}
EARG NARG VEE VALUE = {V(CURR_OUT,VEE) - V(MID,VEE)}
EOUT OUT VEE VALUE = {0.5*(SGN(V(NARG,VEE)) + ABS(SGN(V(NARG,VEE) ) ) )}
*EOUT OUT VEE CURR_OUT VEE 1
.ENDS

.SUBCKT LOGIC_FUNCTION_2_HC_1I_AND_TRISTATE_CMOS A B OUT VCC VEE
GAND  VEE N1 VALUE = {V(A,VEE)*V(B,VEE)} 
RN1 N1 VEE 1 
EOUT OUT VEE N1 VEE 1 
.ENDS 



.SUBCKT LOGIC_TRI_STATE_OUTPUT_HC_1I_AND_TRISTATE_CMOS IN OUT OEZ VCC VEE
EROH NROH VEE TABLE {V(VCC,VEE)} = 
+(2,.1) 
+(6,.1) 
EROL NROL VEE TABLE {V(VCC,VEE)} = 
+(2,.1)  
+(6,.1) 
EOEZ N2 VEE VALUE = {1-V(OEZ,VEE)} 
E1 N1 VEE VALUE = {V(VCC,VEE)*V(IN,VEE)*V(N2,VEE)} 
GOUT N1 OUT VALUE = {V(N1,OUT)*V(N2,VEE)*(V(IN,VEE)/V(NROH,VEE) + (1 - V(IN,VEE))/V(NROL,VEE))} 
.ENDS 


.SUBCKT LOGIC_ICC_HC_1I_AND_TRISTATE_CMOS VCC VEE VIOUT
.PARAM ICC = 2.5E-07 
.PARAM VCC_MAX = 5.5 
.PARAM VCC_MIN = 2
GICC VCC VEE VALUE = {ICC*0.5*(1 + SGN(V(VCC,VEE) - VCC_MIN))} 
EGNDF GNDF 0 VALUE = {0.5*(V(VCC) + V(VEE))} 
GOUTP VCC GNDF VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))} 
GOUTN GNDF VEE VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))} 
.ENDS 


********************************************************************************
*                                 NAND_FLIPFLOP
********************************************************************************

.SUBCKT GATE_2INPUT_HC_2I_NAND_PP_ST_0  Y A B VCC AGND
XU1 Y A B VCC AGND LOGIC_GATE_2PIN_OD_HC_2I_NAND_PP_ST
.ENDS


*$
.SUBCKT LOGIC_GATE_2PIN_OD_HC_2I_NAND_PP_ST OUT A B VCC GND
.PARAM VCC_ABS_MAX = 7
.PARAM VCC_MAX = 6
.PARAM RA = 240000000
.PARAM RB = 240000000
.PARAM CA = 5E-15
.PARAM CB = 5E-15
.PARAM ROEZ = 5000
.PARAM COEZ = 3E-12
RA  A  GND {RA}
RB  B  GND {RB}
CA  A  GND {CA}
CB  B  GND {CB}
XUA NA A VCC GND LOGIC_INPUT_HC_2I_NAND_PP_ST
XUB NB B VCC GND LOGIC_INPUT_HC_2I_NAND_PP_ST
XUG NA NB NOUTG VCC GND LOGIC_FUNCTION_2_HC_2I_NAND_PP_ST
XUOUT NOUTG NOUT_INT VCC GND LOGIC_PP_OUTPUT_HC_2I_NAND_PP_ST
XICC VCC GND NVIOUT LOGIC_ICC_HC_2I_NAND_PP_ST
SICC VCC GND VCC GND SW1
* MONITOR OUTPUT CURRENT *
H1 NVIOUT GND VIOUT 1 
VIOUT NOUT_INT OUTSW 0 
SIOFF OUTSW OUT VCC GND SW2
.MODEL SW1 VSWITCH VON = {VCC_ABS_MAX} VOFF = {VCC_MAX} RON = 10 ROFF = 60E6
.MODEL SW2 VSWITCH VON = {0.55} VOFF = {0.45} RON = 10M ROFF = 100E6
.ENDS
*$

.SUBCKT LOGIC_INPUT_HC_2I_NAND_PP_ST OUT IN VCC VEE
ESTD_THR VSTD_THR VEE TABLE {V(VCC,VEE)} =
+(1,0.5)
+(6,3)
** OUTPUT VOLTAGES **
***********************************
**** STANDARD INPUT MODEL *********
*********************************** 
GSTD VEE CURR_OUT VALUE = {0.5*V(VCC,VEE)*(SGN(V(IN,VSTD_THR)) + ABS(SGN(V(IN,VSTD_THR))))}
ROUT CURR_OUT VEE 1
EMID MID VEE VALUE = {0.5*(V(VCC,VEE) + V(VEE))}
EARG NARG VEE VALUE = {V(CURR_OUT,VEE) - V(MID,VEE)}
EOUT OUT VEE VALUE = {0.5*(SGN(V(NARG,VEE)) + ABS(SGN(V(NARG,VEE) ) ) )}
*EOUT OUT VEE CURR_OUT VEE 1
.ENDS


*$
.SUBCKT LOGIC_FUNCTION_2_HC_2I_NAND_PP_ST A B OUT VCC VEE
GNAND VEE N1 VALUE = {(1 - V(A,VEE)*V(B,VEE))}
RN1 N1 VEE 1
EOUT OUT VEE N1 VEE 1
.ENDS


*$
.SUBCKT LOGIC_PP_OUTPUT_HC_2I_NAND_PP_ST IN OUT VCC VEE
EROH NROH VEE TABLE {V(VCC,VEE)} =
+(2,1)
+(6,1)
EROL NROL VEE TABLE {V(VCC,VEE)} =
+(2,1)
+(6,1)
E1 N1 VEE VALUE = {V(VCC,VEE)*V(IN,VEE)}
GOUT N1 OUT VALUE = {V(N1,OUT)*(V(IN,VEE)/V(NROH,VEE) + (1 - V(IN,VEE))/V(NROL,VEE))}
.ENDS
*


.SUBCKT LOGIC_ICC_HC_2I_NAND_PP_ST VCC VEE VIOUT
.PARAM ICC = 2.5E-08
.PARAM VCC_MAX = 6
.PARAM VCC_MIN = 2
*GICC VCC VEE VALUE = {ICC*V(VCC,VEE)/VCC_MAX}
GICC VCC VEE VALUE = {ICC*0.5*(1 + SGN(V(VCC,VEE) - VCC_MIN))}
*
* FLOATING GROUND AT MID-RAIL
EGNDF GNDF 0 VALUE = {0.5*(V(VCC) + V(VEE))}
*
GOUTP VCC GNDF VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))}
GOUTN GNDF VEE VALUE = {V(VIOUT,VEE)*0.5*(SGN(V(VIOUT,VEE)) + ABS(SGN(V(VIOUT,VEE))))}
*
*GOUTP VCC GNDF VALUE = {IF(V(VIMON,GNDF) > 0, V(VIMON,GNDF),0)}
*GOUTN GNDF VEE VALUE = {IF(V(VIMON,GNDF) <= 0, V(VIMON,GNDF),0)}
.ENDS

